{"version":3,"sources":["Table.js","App.js","index.js"],"names":["Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","task","data","string","react_default","a","createElement","className","concat","Component","App","handleChange","selectedOption","setState","localStorage","setItem","value","options","keys","json","map","elem","label","state","students","el","join","taskName","studentObject","taskContent","react_select_esm","onChange","x","href","split","name","selectClass","obj","undefined","score","src_Table","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.40e5de06.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Table extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.task = this.props.data;\r\n  }\r\n  render(){\r\n    let string;\r\n    switch(this.props.data){\r\n      case 'Checking': string = `Need to check`; \r\n                       break;\r\n      case 'Checked': string =`Checked by mentor`; \r\n                      break;\r\n      case 'InProgress': string = `Students working on that task now`; \r\n                         break;\r\n      case 'ToDo': string = `Task in todo state`; \r\n                   break;\r\n      case 'fail': string = `Don't have task`; \r\n                   break;\r\n      default: break;\r\n    }\r\n    return(\r\n      <div className = 'container'>\r\n        <div className = {`${this.props.data} block`}></div>\r\n        <p>{`- ${string}`}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport './App.css';\nimport json from './mentors.json';\nimport Table from './Table';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.options = Object.keys(json).map((elem)=>{\n  return {value: elem, label: elem};\n});\n    this.state = {\n      selectedOption: (localStorage['selectedOption']) ? localStorage.selectedOption : null,\n    }\n  }\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    localStorage.setItem('selectedOption', selectedOption.value);\n  }\n  render() {\n    const { selectedOption } = this.state;\n    if(this.state.selectedOption){\n      let a = (localStorage['selectedOption']) ? localStorage['selectedOption'] : this.state.selectedOption.value;\n      const students = json[a].students.map(el => {return Object.keys(el).join()});\n      const taskName = Object.keys(json[a].taskName);\n      const studentObject = json[a].students;\n      const taskContent = json[a].taskName;\n      return (\n        <div>\n          <header className=\"App-header\">\n            <h1>Mentor dashboard</h1>\n          </header>\n          <Select\n            value = { selectedOption }\n            onChange = { this.handleChange }\n            options = { this.options }\n          />\n          <table>\n            <thead>\n              <tr>\n              <th></th>\n              {\n                students.map((x) => {\n                  return <th><a href ={`https://github.com/${x}`} >{x}</a></th>\n                })\n              }\n              </tr>\n            </thead>\n            <tbody>\n              {\n                taskName.map(x => {\n                  return <tr>\n                          <td className={taskContent[x][1].split(' ').join('')}>\n                            <a href = {taskContent[x][0]}>{x}</a>\n                          </td>\n                          {\n                            studentObject.map((name) => {\n                              const field = Object.keys(name).join();\n                              const obj = name[field];\n                              if(obj[x] === undefined) {\n                                obj[x] = {\"score\": '-'};\n                              };\n                              let selectClass;\n                              if(taskContent[x][1] === 'Checked'){\n                                if(typeof obj[x].score === 'number' && obj[x].score > 0){\n                                  selectClass = 'Check';\n                                }\n                                if(typeof obj[x].score === 'number' && obj[x].score === 0){\n                                  selectClass = 'fail';\n                                }\n                                if(obj[x].score === \"-\"){\n                                  selectClass = 'fail';\n                                }\n                              }\n                              if(taskContent[x][1] === 'In Progress'){\n                                selectClass = 'InProgress';\n                                if(typeof obj[x].score === 'number' && obj[x].score > 0){\n                                  selectClass = 'Check';\n                                }\n                                if(typeof obj[x].score === 'number' && obj[x].score === 0){\n                                  selectClass = 'fail';\n                                }\n                              }\n                              if(taskContent[x][1] === 'Checking'){\n                                selectClass = 'Checking';\n                                if(typeof obj[x].score === 'number' && obj[x].score > 0){\n                                  selectClass = 'Check';\n                                }\n                                if(typeof obj[x].score === 'number' && obj[x].score === 0){\n                                  selectClass = 'fail';\n                                }\n                                if(obj[x].score === \"-\"){\n                                  selectClass = 'fail';\n                                }\n                              }\n                              if(taskContent[x][1] === 'ToDo'){\n                                selectClass = 'ToDo';\n                              }\n                              return <td className = {selectClass}></td>\n                            })\n                          }\n                        </tr>\n                })\n              }\n            </tbody>\n          </table>\n          <div>\n            <Table data= 'Checked'/>\n            <Table data= 'Checking'/>\n            <Table data= 'InProgress'/>\n            <Table data= 'ToDo'/>\n            <Table data= 'fail'/>\n          </div>\n        </div>\n      );\n    }else{\n      return(\n        <div>\n          <header className=\"App-header\">\n            <h1>Mentor dashboard</h1>\n          </header>\n          <Select\n            value = { selectedOption }\n            onChange = { this.handleChange }\n            options = { this.options }\n          />\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}